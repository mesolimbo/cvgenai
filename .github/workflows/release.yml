name: Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Determine version
        id: get_version
        run: |
          ver=$(python - <<'PY'
          import tomllib, pathlib
          data = tomllib.loads(pathlib.Path('pyproject.toml').read_text())
          print(data['project']['version'])
          PY
          )
          echo "version=$ver" >> "$GITHUB_OUTPUT"

      - name: Show release details
        if: github.event_name == 'pull_request'
        run: echo "Would create release v${{ steps.get_version.outputs.version }}"

      - name: Create tag
        if: github.event_name != 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag "v${{ steps.get_version.outputs.version }}"
          git push origin "v${{ steps.get_version.outputs.version }}"

      - name: Create GitHub release
        if: github.event_name != 'pull_request'
        uses: actions/create-release@v1
        with:
          tag_name: "v${{ steps.get_version.outputs.version }}"
          release_name: "v${{ steps.get_version.outputs.version }}"
